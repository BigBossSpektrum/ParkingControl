"""
Comando para configurar rÃ¡pidamente el sistema para demos y pruebas
"""

from django.core.management.base import BaseCommand
from app_impresora.models import PrinterConfiguration
from app_impresora.printer_service import printer_service


class Command(BaseCommand):
    help = 'Configura el sistema para modo demo con impresiÃ³n simulada'

    def handle(self, *args, **options):
        self.stdout.write(self.style.SUCCESS('Configurando sistema para modo demo...'))
        
        # Verificar si ya hay una impresora configurada
        printer = PrinterConfiguration.objects.filter(is_active=True).first()
        
        if not printer:
            # Crear configuraciÃ³n de impresora demo
            printer = PrinterConfiguration.objects.create(
                name='Impresora Demo (SimulaciÃ³n)',
                printer_type='USB',
                connection_string='DEMO_PRINTER',
                is_active=True,
                model='Epson M244A'
            )
            self.stdout.write(f'âœ… Impresora demo creada: {printer.name}')
        else:
            self.stdout.write(f'âœ… Impresora existente: {printer.name}')
        
        # Habilitar modo simulaciÃ³n
        printer_service.enable_simulation_mode(True)
        self.stdout.write('âœ… Modo simulaciÃ³n habilitado')
        
        # Mostrar estado
        status = printer_service.get_printer_status()
        self.stdout.write(f'ðŸ“Š Estado: {status["message"]}')
        
        self.stdout.write('')
        self.stdout.write(self.style.SUCCESS('ðŸŽ‰ Sistema configurado para demo:'))
        self.stdout.write('   â€¢ Impresora configurada')
        self.stdout.write('   â€¢ Modo simulaciÃ³n activo')
        self.stdout.write('   â€¢ Listo para registrar clientes')
        self.stdout.write('')
        self.stdout.write('Ahora puede registrar clientes y verÃ¡ que se "imprimen" tickets automÃ¡ticamente.')
        self.stdout.write('Acceda a http://127.0.0.1:8000/impresora/ para gestionar la impresora.')
